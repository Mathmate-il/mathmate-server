// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String     @id @default(uuid())
  createdAt DateTime   @default(now())
  email     String     @unique
  name      String
  image     String?
  answers   Answer[]
  questions Question[] @relation("question")
  bookmarks Question[] @relation("UsersAndBookmarks")
  answerRating AnswerRating[]
  questionRating QuestionRating[]
}


model QuestionRating {
  id         String   @id @default(uuid())
  createdAt  DateTime @default(now())
  userId     String
  user       User     @relation(fields: [userId], references: [id])
  questionId   String
  relatedQuestion  Question   @relation(fields: [questionId], references: [id])
}

model Question {
  id             String   @id @default(uuid())
  createdAt      DateTime @default(now())
  title          String
  question       String
  ownerId        String
  owner          User     @relation(name: "question", fields: [ownerId], references: [id])
  answers        Answer[]
  bookedMarkedBy User[]   @relation("UsersAndBookmarks")
  tags           Tag[]    @relation("QuestionsAndTags")
  questionRating QuestionRating[]
}


model AnswerRating {
  id         String   @id @default(uuid())
  createdAt  DateTime @default(now())
  userId     String
  user       User     @relation(fields: [userId], references: [id])
  answerId   String
  relatedAnswer  Answer   @relation(fields: [answerId], references: [id])
}

model Answer {
  id              String   @id @default(uuid())
  createdAt       DateTime @default(now())
  isChosen        Boolean  @default(false)
  answer          String
  ownerId         String
  owner           User     @relation(fields: [ownerId], references: [id])
  questionId      String
  relatedQuestion Question @relation(fields: [questionId], references: [id])
  answerRating AnswerRating[]
}

model Tag {
  id               String     @id @default(uuid())
  tagName          String
  relatedQuestions Question[] @relation("QuestionsAndTags")
}
